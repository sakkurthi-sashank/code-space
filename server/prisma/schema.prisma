generator client {
  provider     = "prisma-kysely"
  output       = "../src/db"
  fileName     = "types.ts"
  enumFileName = "enums.ts"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id              String       @id @default(dbgenerated("gen_random_uuid()"))
  firstName       String
  lastName        String
  emailAddress    String       @unique
  admissionNumber String       @unique
  section         String
  batch           Int
  branch          String
  enrollments     Enrollment[]
  createdAt       DateTime     @default(now())
}

model Course {
  id                String          @id @default(dbgenerated("gen_random_uuid()"))
  courseId          String          @unique
  courseName        String
  courseDescription String
  professorName     String
  learningTags      String[]
  courseStartDate   DateTime
  courseEndDate     DateTime
  enrollments       Enrollment[]
  createdAt         DateTime        @default(now())
  couserContents    CourseContent[]
}

model Enrollment {
  id        String   @id @default(dbgenerated("gen_random_uuid()"))
  studentId String
  courseId  String
  student   Student  @relation(fields: [studentId], references: [id], onDelete: Cascade)
  course    Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

model CourseContent {
  id                     String   @id @default(dbgenerated("gen_random_uuid()"))
  courseId               String
  contentName            String
  courseContentStartDate DateTime
  courseContentEndDate   DateTime
  course                 Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)
  createdAt              DateTime @default(now())
}
